on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi

  build-and-push-ecr:
    name: Build and Push Docker Image to AWS ECR
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Etapa 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v4

      # Etapa 2: Configurar AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Etapa 3: Autenticar no Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

       # Etapa 4: Extrair o nome do repositório
      - name: Extract repository name
        id: repo-name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      # Etapa 5: Construir a imagem Docker
      - name: Build Docker image
        run: |
          docker build -t $REPO_NAME:latest .
          docker tag $REPO_NAME:latest ${{ steps.login-ecr.outputs.registry }}/$REPO_NAME:latest

      # Etapa 6: Enviar a imagem para o ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$REPO_NAME:latest